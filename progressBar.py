# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'progressBar.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import requests
import urllib.request
from os import path
import ctypes
from PyQt5.QtWidgets import *
from urllib.request import Request, urlopen
from urllib.error import URLError, HTTPError

__domain__ = 'localhost:8000'
# __domain__ = '61.19.253.23'


URLUpdateHos = 'http://' + __domain__ + '/media/file/Update_HospitalOS.exe'


def TestURL():
    try:
        response = urlopen(URLUpdateHos)
    except HTTPError as e:
        # print('The server couldn\'t fulfill the request. Error code: ', e.code)
        return 'offline'
    except URLError as e:
        # print(e.reason)
        return 'offline'
    else:
        # print ('Website is  serverVersionSqlHos working fine')
        url_download_path = requests.get('http://' + __domain__ + '/media/file/Update_HospitalOS.exe')
        return url_download_path.status_code

URLDownloadPathStatus =  TestURL()


class Ui_formProgressBar(object):
    def setupUi(self, formProgressBar):
        formProgressBar.setObjectName("formProgressBar")
        formProgressBar.resize(425, 117)
        formProgressBar.setMinimumSize(QtCore.QSize(425, 117))
        formProgressBar.setMaximumSize(QtCore.QSize(425, 117))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icon/download-files.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        formProgressBar.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(formProgressBar)
        self.centralwidget.setObjectName("centralwidget")
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setGeometry(QtCore.QRect(20, 20, 391, 31))
        self.progressBar.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedStates))
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")
        self.btn_download = QtWidgets.QPushButton(self.centralwidget)
        self.btn_download.setGeometry(QtCore.QRect(170, 60, 93, 28))
        self.btn_download.setObjectName("btn_download")
        formProgressBar.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(formProgressBar)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 425, 26))
        self.menubar.setObjectName("menubar")
        formProgressBar.setMenuBar(self.menubar)

        self.retranslateUi(formProgressBar)
        QtCore.QMetaObject.connectSlotsByName(formProgressBar)

        # self.btn_download.clicked.connect(self.Download)
        self.btn_download.clicked.connect(lambda: self.Download(formProgressBar))
        # self.btn_download.triggered.connect(lambda: self.Download(formProgressBar))

    def file_app_version_check(self):
        if path.exists('Update_HospitalOS.exe') == True:
            f = open("Update_HospitalOS.exe", "r")
            return True
        else:
            return False

    def Download(self, formProgressBar):

        if self.file_app_version_check() == True:
            self.run_patch()
            formProgressBar.hide()
        else:
            if URLDownloadPathStatus == 200:
                self.btn_download.setEnabled(False)
                urllib.request.urlretrieve(URLUpdateHos, 'Update_HospitalOS.exe', self.Handel_Progress)
                self.run_patch()
                formProgressBar.hide()
            elif URLDownloadPathStatus == 404:
                self.btn_download.setText("ไม่พบไฟล์")
            elif URLDownloadPathStatus == 503:
                self.btn_download.setText("Check internet")



    def closescr(self, formProgressBar):
        # print("test2")
        # hide the screen on exit btn clicked
        formProgressBar.hide()


    def run_patch(self):
        ctypes.windll.Shell32.ShellExecuteW(0, 'open', 'Update_HospitalOS.exe', None, None, 10)

    def Handel_Progress(self, blocknum, blocksize, totalsize):
        readed_data = blocknum * blocksize
        if totalsize > 0:
            download_percentage = readed_data * 100 / totalsize
            self.progressBar.setValue(download_percentage)




    def retranslateUi(self, formProgressBar):
        _translate = QtCore.QCoreApplication.translate
        formProgressBar.setWindowTitle(_translate("formProgressBar", "Download"))
        self.btn_download.setText(_translate("formProgressBar", "Download"))

